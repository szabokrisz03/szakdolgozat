@using TaskManager.Srv.Model.ViewModel;

<div class="milestone-div">
    <div>
        <MudText class="milestone-text" onclick="@(() => ToggleDrawer())"><b>Határidők</b></MudText>
        <MudIconButton class="add-btn" Icon="@Icons.Material.Filled.Add" OnClick="CreateMilestone"></MudIconButton>
    </div>

    @if (IsOpen)
    {
        <MudTable class="milestone" @ref="milestoneTable" Items="milestoneList" Dense="true" Hover="true" SortLabel="Sort By">
            <ColGroup>
                <col />
                <col class="milestone-th" />
                <col class="milestone-th" />
                <col class="milestone-delete-done"/>    
            </ColGroup>
            <HeaderContent>
                <MudTh>Név</MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<MilestoneViewModel, object>(x => x.Planned!)">Tervezett határidő</MudTableSortLabel></MudTh>
                <MudTh>Teljesítés dátuma</MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Név">@context.Name</MudTd>    
                <MudTd DataLabel="Tervezett határidő">@Convert.ToDateTime(@context.Planned).ToString("yyyy/MM/dd")</MudTd>
                <MudTd DataLabel="Teljesítés dátuma">@if (context.Actual != null) { @Convert.ToDateTime(@context.Actual).ToString("yyyy/MM/dd") }</MudTd>
                <MudTd>
                <MudIconButton class="add-btn" Icon="@Icons.Material.Filled.Done" OnClick="(() => PopUpButton(context))"></MudIconButton>
                <MudIconButton class="add-btn" Icon="@Icons.Material.Filled.Delete" OnClick="(() => DeletePopUpButton(context))"></MudIconButton>
                </MudTd>
            </RowTemplate>
        </MudTable>
    }
    
</div>
