@using TaskManager.Srv.Model.ViewModel;
<div class="milestone-div">
    <MudText class="milestone-text" onclick="@(() => ToggleDrawer())"><b>Mérföldkövek</b></MudText>
    
    @if (IsOpen)
    {
        <div>
            <MudIconButton class="add-btn" Icon="@Icons.Material.Filled.Add" OnClick="CreateMilestone"></MudIconButton>
        </div>
        <MudCard class="milestone" style="margin-top: 0px;" Elevation="0">
        <MudDropContainer T="MilestoneViewModel" Items="@milestoneList" ItemsSelector="@((item,zone) => item.Table == zone)" ItemDropped="Update">
            <ChildContent>

                <MudPaper Elevation="0">
                    <MudList Clickable="true">
                        <MudDropZone T="MilestoneViewModel" Identifier="main" ItemDraggingClass="mud-info-text" AllowReorder="true"></MudDropZone>
                    </MudList>
                </MudPaper>
                
            </ChildContent>
            <ItemRenderer>
                <MudListItem class="mud-list-item" Dense="true">
                    <div class="name-date-text">
                        <div class="milestone-form-1">
                            <MudText>@context.Name</MudText>
                        </div>
                        <div class="milestone-form-2">
                            <MudText>@context.Planned</MudText>
                        </div>
                    </div>
                    <span class="add-delete-done-button">
                    <MudIconButton Icon="@Icons.Material.Filled.Delete"></MudIconButton>
                    <MudIconButton Icon="@Icons.Material.Filled.Done"></MudIconButton>
                    </span>

                </MudListItem>
            </ItemRenderer/>
        </MudDropContainer>
         </MudCard>
    }
</div>
